
/*




可重载的一元运算符如下：

! (逻辑 NOT)

& (地址)

~ (的补)

* (指针取消引用)

+ (一元加)

- (一元求反)

++ (递增)

-- (减)

转换运算符

在 Increment 和 ++ -- Decrement中分别处理 (和) 递增和减量运算符。

转换运算符也在单独的主题中讨论;请参阅 用户定义的类型转换。

以下规则适用于所有其他一元运算符。 若要将一元运算符函数声明为非静态成员，则必须用以下形式声明它：

ret-type **operator**op ()

其中 ret-type 是返回类型 ，op 是上表中列出的运算符之一。

若要将一元运算符函数声明为全局函数，则必须用以下形式声明它：

ret-type **operator**op ( arg )

其中 ，ret 类型和 操作如 成员运算符函数所述 ，arg 是要操作的类类型的参数。

 备注

一元运算符的返回类型没有限制。 例如，逻辑“非”(!) 返回整数值是合理的，但并非强制性的。






*/